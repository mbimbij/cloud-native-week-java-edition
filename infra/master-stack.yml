AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template ElasticBeanstalk_Simple: Configure and
  launch an AWS Elastic Beanstalk application that connects to an Amazon RDS
  database instance. Monitoring is setup on the database. **WARNING** This
  template creates one or more Amazon EC2 instances and an Amazon Relational
  Database Service database instance. You will be billed for the AWS resources
  used if you create a stack from this template.
Parameters:
  ApplicationName:
    Type: String
    Description: Application Name
  DBName:
    Type: String
    Description: DB Name
  DBUser:
    NoEcho: 'true'
    Type: String
    Description: Test database admin account name
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  OperatorEMail:
    Description: EMail address to notify if there are any operational issues
    Type: String
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
  S3Bucket:
    Type: String
    Description: S3 Bucket
  GithubRepo:
    Type: String
    Description: Github source code repository
  GithubRepoBranch:
    Type: String
    Description: Github source code branch
  StagingVPCCIDR:
    Type: String
    Description: CIDR block used to create the VPC (e.g. 10.0.0.0/24)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 10.0.0.0/24)
  StagingPublicSubnet1CIDR:
    Type: String
    Description: CIDR block should used to create the public subnet in AZ1 (e.g. 10.0.0.0/26)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 10.0.0.0/26)
  StagingPublicSubnet2CIDR:
    Type: String
    Description: CIDR block should used to create the public subnet in AZ2 (e.g. 10.0.0.64/26)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 10.0.0.64/26)
  StagingPrivateSubnet1CIDR:
    Type: String
    Description: CIDR block should used to create the private subnet in AZ1 (e.g. 10.0.0.128/26)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 10.0.0.128/26)
  StagingPrivateSubnet2CIDR:
    Type: String
    Description: CIDR block should used to create the private subnet in AZ2 (e.g. 10.0.0.192/26)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x. (e.g. 10.0.0.192/26)
  SshKeyName:
    Type: String
    Description: SSH Key Pair Name
  BaseAmiId:
    Type: AWS::EC2::Image::Id
    Description: Ami Id
  StagingMinInstancesNumber:
    Type: Number
    Description: Staging Min Instances Number
  StagingMaxInstancesNumber:
    Type: Number
    Description: Staging MacxInstances Number
Resources:
  StagingNetwork:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: 'network/network.yml'
      Parameters:
        VPCCIDR:
          Ref: StagingVPCCIDR
        PublicSubnet1CIDR:
          Ref: StagingPublicSubnet1CIDR
        PublicSubnet2CIDR:
          Ref: StagingPublicSubnet2CIDR
        PrivateSubnet1CIDR:
          Ref: StagingPrivateSubnet1CIDR
        PrivateSubnet2CIDR:
          Ref: StagingPrivateSubnet2CIDR
        ApplicationName:
          Ref: ApplicationName
        Environment: 'staging'
      Tags:
        - Key: Name
          Value: !Sub '${ApplicationName}::StagingNetwork'
  StagingBastionHost:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: 'bastion-host/bastion-host.yml'
      Parameters:
        VpcId: !GetAtt StagingNetwork.Outputs.VPC
        SubnetId: !GetAtt StagingNetwork.Outputs.PublicSubnet1
        Environment: 'staging'
        AmiId: !Ref BaseAmiId
        SshKeyName: !Ref SshKeyName
      Tags:
        - Key: Name
          Value: !Sub '${ApplicationName}::StagingBastionHost'
  BeanstalkBasedInfra:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: 'beanstalk/beanstalk-environments.yml'
      Parameters:
        ApplicationName: !Ref ApplicationName
        DBName: !Ref DBName
        DBUser: !Ref DBUser
        OperatorEMail: !Ref OperatorEMail
        VpcId: !GetAtt StagingNetwork.Outputs.VPC
        PrivateSubnetIds: !GetAtt StagingNetwork.Outputs.PrivateSubnets
        PublicSubnetIds: !GetAtt StagingNetwork.Outputs.PublicSubnets
        SshKeyName: !Ref SshKeyName
        BastionHostSecurityGroupId: !GetAtt StagingBastionHost.Outputs.SecurityGroupId
        StagingMinInstancesNumber: !Ref StagingMinInstancesNumber
        StagingMaxInstancesNumber: !Ref StagingMaxInstancesNumber
      Tags:
        - Key: Name
          Value: !Sub '${ApplicationName}::BeanstalkBasedInfra'
  BeanstalkBasedPipeline:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: 'beanstalk/beanstalk-pipeline.yml'
      Parameters:
        ApplicationName: !Ref ApplicationName
        S3Bucket: !Ref S3Bucket
        GithubRepo: !Ref GithubRepo
        GithubRepoBranch: !Ref GithubRepoBranch
        BeanstalkApplicationName: !GetAtt BeanstalkBasedInfra.Outputs.ApplicationName
        BeanstalkEnvironmentName: !GetAtt BeanstalkBasedInfra.Outputs.EnvironmentName
      Tags:
        - Key: Name
          Value: !Sub '${ApplicationName}::BeanstalkBasedPipeline'
