AWSTemplateFormatVersion: '2010-09-09'
Description: ElasticsearchDomain resource
Parameters:
  DomainName:
    Description: User-defined Elasticsearch domain name
    Type: String
  ElasticsearchVersion:
    Description: User-defined Elasticsearch version
    Default: 7.10
    Type: String
  InstanceType:
    Default: 't3.small.elasticsearch'
    Type: String
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Vpc Id
  PublicSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Public Subnet Ids
  MasterUserName:
    Type: String
    Description: Master User Name
Resources:
  MasterUserSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub '${DomainName}-MasterUserSecret'
      Description: "This secret has a dynamically generated secret password."
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${MasterUserName}"}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: Name
          Value: !Ref DomainName
  ElasticsearchDomain:
    Type: 'AWS::Elasticsearch::Domain'
    Properties:
      DomainName:
        Ref: DomainName
      ElasticsearchVersion:
        Ref: ElasticsearchVersion
      ElasticsearchClusterConfig:
        InstanceCount: '3'
        InstanceType:
          Ref: InstanceType
      EBSOptions:
        EBSEnabled: true
#        Iops: '0'
        VolumeSize: '10'
        VolumeType: 'gp2'
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:ESHttp*'
            Resource: !Sub 'arn:${AWS::Partition}:es:${AWS::Region}:${AWS::AccountId}:domain/${DomainName}/*'
      AdvancedOptions:
        rest.action.multi.allow_explicit_index: true
      VPCOptions:
        SubnetIds:
          - !Select [0, !Ref PublicSubnetIds]
        SecurityGroupIds:
          - Ref: mySecurityGroup
      NodeToNodeEncryptionOptions:
        Enabled: true
      EncryptionAtRestOptions:
        Enabled: true
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: "Policy-Min-TLS-1-0-2019-07"
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName: !Ref MasterUserName
          MasterUserPassword: iutopomMfKQHZPl9_Ek1
#          MasterUserPassword: !Sub '{{resolve:secretsmanager:${MasterUserSecret}:SecretString:password}}'
  mySecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: "Opensearch Security Group"
      VpcId: !Ref VpcId
      GroupName: "Opensearch Security Group"
      SecurityGroupIngress:
        - FromPort: 443
          IpProtocol: tcp
          ToPort: 443
          CidrIp: 0.0.0.0/0
#  AWSServiceRoleForAmazonOpenSearchService:
#    Type: 'AWS::IAM::ServiceLinkedRole'
#    Properties:
#      AWSServiceName: es.amazonaws.com
#      Description: 'Role for ES to access resources in my VPC'

Outputs:
  DomainArn:
    Value:
      'Fn::GetAtt':
        - ElasticsearchDomain
        - DomainArn
  DomainEndpoint:
    Value:
      'Fn::GetAtt':
        - ElasticsearchDomain
        - DomainEndpoint
  SecurityGroupId:
    Value: !Ref mySecurityGroup