AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template ElasticBeanstalk_Simple: Configure and
  launch an AWS Elastic Beanstalk application that connects to an Amazon RDS
  database instance. Monitoring is setup on the database. **WARNING** This
  template creates one or more Amazon EC2 instances and an Amazon Relational
  Database Service database instance. You will be billed for the AWS resources
  used if you create a stack from this template.
Parameters:
  ApplicationName:
    Type: String
    Description: Application Name
  DBUser:
    NoEcho: 'true'
    Type: String
    Description: Test database admin account name
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  OperatorEMail:
    Description: EMail address to notify if there are any operational issues
    Type: String
    AllowedPattern: >-
      ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
  DBName:
    Type: String
    Description: DB Name
Mappings:
  Region2Principal:
    ap-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-south-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ca-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    cn-north-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    cn-northwest-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    eu-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-north-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-3:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    me-south-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    sa-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-east-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
Conditions:
  Is-EC2-VPC: !Or
    - !Equals
      - !Ref 'AWS::Region'
      - eu-central-1
    - !Equals
      - !Ref 'AWS::Region'
      - eu-west-3
    - !Equals
      - !Ref 'AWS::Region'
      - cn-north-1
  Is-EC2-Classic: !Not
    - !Condition Is-EC2-VPC
Resources:
  WebServerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !FindInMap
                  - Region2Principal
                  - !Ref 'AWS::Region'
                  - EC2Principal
            Action:
              - 'sts:AssumeRole'
      Path: /
  WebServerRolePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: WebServerRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            NotAction: 'iam:*'
            Resource: '*'
      Roles:
        - !Ref WebServerRole
  WebServerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref WebServerRole
  SampleApplication:
    Type: 'AWS::ElasticBeanstalk::Application'
    Properties:
      ApplicationName: !Ref ApplicationName
      Description: !Sub 'AWS Elastic Beanstalk Application for ${ApplicationName}'
  SampleConfigurationTemplate:
    Type: 'AWS::ElasticBeanstalk::ConfigurationTemplate'
    Properties:
      ApplicationName: !Ref SampleApplication
      Description: Default Configuration Version 1.0
      SolutionStackName: 64bit Amazon Linux 2 v3.2.5 running Corretto 11
      OptionSettings:
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SPRING_FLYWAY_URL
          Value: !Join
            - ''
            - - 'jdbc:mysql://'
              - !GetAtt
                - SampleDB
                - Endpoint.Address
              - ':'
              - !GetAtt
                - SampleDB
                - Endpoint.Port
              - '/'
              - !Ref DBName
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SPRING_FLYWAY_USER
          Value: !Ref DBUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SPRING_FLYWAY_PASSWORD
          Value: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:password}}'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SPRING_R2DBC_URL
          Value: !Join
            - ''
            - - 'r2dbc:mysql://'
              - !GetAtt
                - SampleDB
                - Endpoint.Address
              - ':'
              - !GetAtt
                - SampleDB
                - Endpoint.Port
              - '/'
              - !Ref DBName
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SPRING_R2DBC_USERNAME
          Value: !Ref DBUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: SPRING_R2DBC_PASSWORD
          Value: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:password}}'
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: SecurityGroups
          Value: !Ref InstanceSecurityGroup
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref WebServerInstanceProfile
  SampleEnvironment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      Description: !Sub 'AWS Elastic Beanstalk Environment Sample Application ${ApplicationName}'
      ApplicationName: !Ref SampleApplication
      EnvironmentName: !Sub '${ApplicationName}-environment'
      TemplateName: !Ref SampleConfigurationTemplate
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: RDS allows ingress from EC2 instances in this group.
      SecurityGroupIngress: []
  DBEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Condition: Is-EC2-VPC
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupName: !Ref InstanceSecurityGroup
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
  DBSecurityGroup:
    Type: 'AWS::RDS::DBSecurityGroup'
    Condition: Is-EC2-Classic
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName: !Ref InstanceSecurityGroup
      GroupDescription: database access
  SampleDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      Engine: MySQL
      DBName: !Ref DBName
      MasterUsername: !Ref DBUser
      DBInstanceClass: db.t2.small
      AllocatedStorage: '5'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DBSecret}:SecretString:password}}'
      VPCSecurityGroups: !If
        - Is-EC2-VPC
        - - !GetAtt
            - DBEC2SecurityGroup
            - GroupId
        - !Ref 'AWS::NoValue'
      DBSecurityGroups: !If
        - Is-EC2-Classic
        - - !Ref DBSecurityGroup
        - !Ref 'AWS::NoValue'
  DBSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub '${ApplicationName}-DBSecret'
      Description: "This secret has a dynamically generated secret password."
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBUser}"}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: ApplicationName
          Value: !Ref ApplicationName
  SecretRDSInstanceAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref DBSecret
      TargetId: !Ref SampleDB
      TargetType: AWS::RDS::DBInstance
  AlarmTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      Subscription:
        - Endpoint: !Ref OperatorEMail
          Protocol: email
  CPUAlarmHigh:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      EvaluationPeriods: '10'
      Statistic: Average
      Threshold: '50'
      AlarmDescription: >-
        Alarm if CPU too high or metric disappears indicating the RDS database
        instance is having issues
      Period: '60'
      Namespace: AWS/RDS
      MetricName: CPUUtilization
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref SampleDB
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlarmTopic
      InsufficientDataActions:
        - !Ref AlarmTopic
Outputs:
  URL:
    Description: URL of the AWS Elastic Beanstalk Environment
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - SampleEnvironment
          - EndpointURL
  ApplicationName:
    Description: Name of the beanstalk application
    Value: !Ref SampleApplication
  EnvironmentName:
    Description: Name of the beanstalk environment
    Value: !Ref SampleEnvironment